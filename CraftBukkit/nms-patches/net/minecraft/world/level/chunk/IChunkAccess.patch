
@@ -256,10 +265,11 @@
 
     public void setUnsaved(boolean flag) {
         this.unsaved = flag;
+        if (!flag) this.persistentDataContainer.dirty(false); // CraftBukkit - SPIGOT-6814: chunk was saved, pdc is no longer dirty
     }
 
     public boolean isUnsaved() {
-        return this.unsaved;
+        return this.unsaved || this.persistentDataContainer.dirty(); // CraftBukkit - SPIGOT-6814: chunk is unsaved if pdc was mutated
     }
 
     public abstract ChunkStatus getStatus();
@@ -392,6 +402,27 @@
         }
     }
 
+    // CraftBukkit start
+    public void setBiome(int i, int j, int k, Holder<BiomeBase> biome) {
+        try {
+            int l = QuartPos.fromBlock(this.getMinBuildHeight());
+            int i1 = l + QuartPos.fromBlock(this.getHeight()) - 1;
+            int j1 = MathHelper.clamp(j, l, i1);
+            int k1 = this.getSectionIndex(QuartPos.toBlock(j1));
+
+            this.sections[k1].setBiome(i & 3, j1 & 3, k & 3, biome);
+        } catch (Throwable throwable) {
+            CrashReport crashreport = CrashReport.forThrowable(throwable, "Setting biome");
+            CrashReportSystemDetails crashreportsystemdetails = crashreport.addCategory("Biome being set");
+
+            crashreportsystemdetails.setDetail("Location", () -> {
+                return CrashReportSystemDetails.formatLocation(this, i, j, k);
+            });
+            throw new ReportedException(crashreport);
+        }
+    }
+    // CraftBukkit end
+
     public void fillBiomesFromNoise(BiomeResolver biomeresolver, Climate.Sampler climate_sampler) {
         ChunkCoordIntPair chunkcoordintpair = this.getPos();
         int i = QuartPos.fromBlock(chunkcoordintpair.getMinBlockX());
