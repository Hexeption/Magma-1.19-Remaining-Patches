
 
@@ -168,6 +177,12 @@
                                     this.blockState = (IBlockData) this.blockState.setValue(BlockProperties.WATERLOGGED, true);
                                 }
 
+                                // CraftBukkit start
+                                if (CraftEventFactory.callEntityChangeBlockEvent(this, blockposition, this.blockState).isCancelled()) {
+                                    this.discard(); // SPIGOT-6586 called before the event in previous versions
+                                    return;
+                                }
+                                // CraftBukkit end
                                 if (this.level.setBlock(blockposition, this.blockState, 3)) {
                                     ((WorldServer) this.level).getChunkSource().chunkMap.broadcast(this, new PacketPlayOutBlockChange(blockposition, this.level.getBlockState(blockposition)));
                                     this.discard();
@@ -238,7 +253,7 @@
             if (i < 0) {
                 return false;
             } else {
-                Predicate predicate;
+                Predicate<Entity> predicate; // CraftBukkit - decompile error
                 DamageSource damagesource1;
 
                 if (this.blockState.getBlock() instanceof Fallable) {
@@ -254,7 +269,9 @@
                 float f2 = (float) Math.min(MathHelper.floor((float) i * this.fallDamagePerDistance), this.fallDamageMax);
 
                 this.level.getEntities((Entity) this, this.getBoundingBox(), predicate).forEach((entity) -> {
+                    CraftEventFactory.entityDamage = this; // CraftBukkit
                     entity.hurt(damagesource1, f2);
+                    CraftEventFactory.entityDamage = null; // CraftBukkit
                 });
                 boolean flag = this.blockState.is(TagsBlock.ANVIL);
 
